<?php
exec('df -T | grep -vE "tmpfs|rootfs|Filesystem"', $drivesarray);
for ($i=0; $i<count($drivesarray); $i++) {
	$drivesarray[$i] = preg_replace('!\s+!', ' ', $drivesarray[$i]);
	preg_match_all('/\S+/', $drivesarray[$i], $drivedetails);
	list($fs, $type, $size, $used, $available, $percentage, $mounted) = $drivedetails[0];
	
	//We remove /boot as it isn't revelant
	if($mounted != "/boot"){
		if($mounted == "/"){
			$mounted = "SD Card"; //We rename the root directory to SD Card
		}
		else
		{
			$mounted = $mounted;
		}

		$percent = rtrim($percentage, '%');
		    //OK
		if ($percent < 50){
			$label_color = "success";
		}

    //WARNING
		if (($percent >= 50) && ($percent < 80)) {
			$label_color = "warning";
		}

    //DANGER
		if ($percent >= 80) {
			$label_color = "danger";
		}

		$data = Functions::convertFileSize($available * 1000)." / ".Functions::convertFileSize($size * 1000);
		$datas[] = array(
			'name' => $mounted,
			'text' => $data,
			'label' => $label_color,
			'bar' => $percent 
			); 
	}
}

$label_color = "info";
exec('lsblk --pairs', $disksArray);
$j = 0;
for ($i = 0; $i < count($disksArray); $i++) { 
	parse_str(str_replace(array('"',' '), array("","&"), $disksArray[$i]), $output);    

	if(empty($output["MOUNTPOINT"]) && $output["TYPE"]== "part"){
		$j++;
		$data = $output["SIZE"];
		$datas[] = [
		"name" => "(unmounted) /dev/".$output["NAME"],
		"text" => $data,
		"bar" => 0,
		"label" => $label_color
		];
	}
}

if(isset($_["data_id"])){
	$datas["data_id"] = $_["data_id"];
	$json = json_encode($datas);
	echo $json;
}


?>